plugins {
    id 'com.android.application'
    id 'dagger.hilt.android.plugin'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id("kotlin-parcelize")
    id 'kotlin-android'
}

android {
//    signingConfigs {
//        debug {
//            storeFile file('E:\\platform.keystore')
//            storePassword '123456'
//            keyAlias 'platform'
//            keyPassword '123456'
//        }
//        release {
////            manifestPlaceholders = [
////                    APP_NAME: "@string/app_name",
////            ]
//            storeFile file('E:\\platform.keystore')
//            storePassword '123456'
//            keyAlias 'platform'
//            keyPassword '123456'
//        }
//    }
    compileSdk 33

    defaultConfig {
        applicationId "com.wl.turbidimetric"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0.0.0-22修复关闭调试页面显示异常的问题"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    //release版本输出包名自动追加版本号和版本名称
    applicationVariants.all {
        variant ->
            variant.outputs.all {
                //只处理生产版本
                if (buildType.name == 'release') {
                    def createTime = new Date().format("YYYY-MM-dd", TimeZone.getTimeZone("GMT+08:00"))
                    outputFileName = "乳胶比浊" + defaultConfig.versionName + "_" + createTime  + ".apk"
                }
            }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    buildFeatures {
        dataBinding true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
//            buildConfigField("int", "buildNo", "${appBuildNo}")
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
//            buildConfigField("int", "buildNo", "${appBuildNo}")、
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
        exclude 'classes.dex'
//        exclude '**.**'
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    //忽略错误
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    implementation files('libs\\jxl.jar')
    implementation files('libs\\slf4j-api-1.6.6.jar')
    implementation files('libs\\slf4j-log4j12-1.6.6.jar')
    implementation files('libs\\log4j-1.2.17.jar')
    implementation files('libs\\hapi-base-2.2.jar')
    implementation files('libs\\hapi-structures-v231-2.2.jar')
    implementation files('libs\\commons-math3-3.6.1.jar')
    //test mock
    testImplementation 'org.mockito:mockito-core:4.4.0'
    androidTestImplementation "org.mockito:mockito-android:4.4.0"
    //test junit
    androidTestImplementation "androidx.test:runner:1.5.0"
    androidTestImplementation "androidx.test:rules:1.5.0"
    // test UI testing with UI Automator
//    androidTestImplementation "androidx.test.uiautomator:uiautomator:2.1.0"
    //test 协程
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    //test junit
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.4"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    //test truth
    androidTestImplementation "androidx.test.ext:truth:1.5.0"
    //test orchestrator
    androidTestUtil "androidx.test:orchestrator:1.4.2"

    //mockito
    testImplementation 'org.mockito:mockito-core:3.0.0'
    //powermock
    testImplementation 'org.powermock:powermock-module-junit4:2.0.2'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.2'
    //robolectric
    testImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.appcompat:appcompat:1.1.1'
//    androidTestImplementation 'com.google.android.material:material:1.6.0'

//    testImplementation 'org.robolectric:robolectric:4.3.1'testImplementation 'androidx.test:core:1.2.0'
//    testImplementation 'org.robolectric:robolectric:4.3.1'

    implementation 'androidx.core:core-ktx:1.7.0'
    //old 1.5.1
    implementation 'androidx.appcompat:appcompat:1.1.1'
    implementation("com.google.android.material:material:1.6.0") {
        exclude group: 'androidx.recyclerview', module: 'recyclerview'
    }
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation project(path: ':wllib')
    implementation project(path: ':MPChartLib')
    implementation project(path: ':weiqianwllib')



    //navigation
    def nav_version = "2.5.3"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    //paging3
    def paging_version = "3.1.1"
    implementation("androidx.paging:paging-runtime:$paging_version") {
        exclude group: 'androidx.recyclerview', module: 'recyclerview'
    }
    // alternatively - without Android dependencies for tests
    testImplementation "androidx.paging:paging-common:$paging_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    //room
    def room_version = "2.5.0"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-paging:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    //hilt
    implementation "com.google.dagger:hilt-android:2.42"
    kapt "com.google.dagger:hilt-android-compiler:2.42"
    kapt "androidx.hilt:hilt-compiler:1.0.0"

    def lifecycle_version = "2.4.1"

    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    //logger
//    implementation 'com.jakewharton.timber:timber:4.5.1'
    //操作u盘
    implementation 'me.jahnen.libaums:core:0.9.1'
    //serial port usb转串
//    implementation 'com.github.mik3y:usb-serial-for-android:3.4.6'
    //eventbus
    implementation("org.greenrobot:eventbus:3.3.1")
    implementation 'com.github.felHR85:UsbSerial:6.1.0'

    //documentfile 官方文件管理的新类
    implementation 'androidx.documentfile:documentfile:1.0.1'
    //mmkv键值对
//    implementation 'com.tencent:mmkv:1.2.16'

//    implementation("io.github.cymchad:BaseRecyclerViewAdapterHelper:4.0.0-beta06") {
//        exclude group: 'androidx.recyclerview', module: 'recyclerview'
//    }
    //old 1.3.0
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    //datastore
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    //时间选择器
//    implementation ("com.jzxiang.pickerview:TimePickerDialog:1.0.1") {
//        exclude group: 'com.android.support', module: 'support-v4'
//    }
    implementation 'com.wdullaer:materialdatetimepicker:4.2.3'
    implementation 'com.github.gzu-liyujiang.AndroidPicker:WheelPicker:4.1.11'
    implementation 'com.github.gzu-liyujiang.AndroidPicker:Common:4.1.11'
    implementation 'com.github.gzu-liyujiang.AndroidPicker:WheelView:4.1.11'
    implementation "com.github.skydoves:powerspinner:1.2.1"
    //dialog
    implementation("com.github.li-xiaojun:XPopup:2.9.19") {
        exclude group: "com.davemorrissey.labs", module: "subsampling-scale-image-view-androidx"
    }
    //json解析
    implementation 'com.google.code.gson:gson:2.8.5'

}
