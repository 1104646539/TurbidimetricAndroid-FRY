plugins {
    id 'com.android.application'
    id 'dagger.hilt.android.plugin'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id("kotlin-parcelize")
    id 'kotlin-android'
}

android {
    signingConfigs {
//        debug {
//            storeFile file('E:\\platform.keystore')
//            storePassword '123456'
//            keyAlias 'platform'
//            keyPassword '123456'
//        }
//        release {
////            manifestPlaceholders = [
////                    APP_NAME: "@string/app_name",
////            ]
//            storeFile file('E:\\platform.keystore')
//            storePassword '123456'
//            keyAlias 'platform'
//            keyPassword '123456'
//        }
    }
    compileSdk 35

    defaultConfig {
        applicationId "com.wl.turbidimetric"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0.3.0-FRY-7-2搅拌时间-添加仓门检测"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    //release版本输出包名自动追加版本号和版本名称
    applicationVariants.all {
        variant ->
            variant.outputs.all {
                //只处理生产版本
                if (buildType.name == 'release') {
                    def createTime = new Date().format("YYYY-MM-dd", TimeZone.getTimeZone("GMT+08:00"))
                    outputFileName = "免疫比浊" + defaultConfig.versionName + "_" + createTime + ".apk"
                }
            }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    buildFeatures {
        dataBinding true
        buildConfig = true
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
//            buildConfigField("int", "buildNo", "${appBuildNo}")

        }
        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
//            buildConfigField("int", "buildNo", "${appBuildNo}")、

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
        exclude 'classes.dex'
//        exclude '**.**'
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    //忽略错误\
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    namespace 'com.wl.turbidimetric'
}

dependencies {
//    implementation files('libs\\jxl.jar')
//    implementation files('libs\\slf4j-api-1.6.6.jar')
//    implementation files('libs\\slf4j-log4j12-1.6.6.jar')
    implementation files('libs\\log4j-1.2.17.jar')
    implementation files('libs\\hapi-base-2.2.jar')
    implementation files('libs\\hapi-structures-v231-2.2.jar')
    implementation files('libs\\commons-math3-3.6.1.jar')
    implementation files('libs\\jxl-2.6.12.jar')

//    implementation 'androidx.core:core-animation:1.0.0'
//    implementation files('libs\\iText-5.0.5.jar')
    //test mock
    testImplementation libs.mockito.core
    androidTestImplementation libs.mockito.android
    //test junit
    androidTestImplementation libs.androidx.test.runner
    androidTestImplementation libs.androidx.test.rules
    // test UI testing with UI Automator
//    androidTestImplementation "androidx.test.uiautomator:uiautomator:2.1.0"
    //test 协程
    testImplementation libs.kotlinx.coroutines.android
    testImplementation libs.kotlinx.coroutines.test
    //test junit
    androidTestImplementation libs.androidx.test.ext.junit
    androidTestImplementation libs.androidx.test.ext.junit.ktx
    androidTestImplementation libs.espresso.core
    //test truth
    androidTestImplementation libs.androidx.test.truth
    //test orchestrator
    androidTestUtil libs.androidx.test.orchestrator

    //mockito
    testImplementation libs.mockito.core3
    //powermock
//    testImplementation libs.powermock.junit4
//    testImplementation libs.powermock.mockito2
    //robolectric
    testImplementation libs.androidx.test.core
    androidTestImplementation libs.appcompat
//    androidTestImplementation 'com.google.android.material:material:1.6.0'

//    testImplementation 'org.robolectric:robolectric:4.3.1'testImplementation 'androidx.test:core:1.2.0'
//    testImplementation 'org.robolectric:robolectric:4.3.1'

    implementation libs.androidx.core.ktx
    //old 1.5.1
    implementation libs.appcompat
    implementation(libs.material) {
        exclude group: 'androidx.recyclerview', module: 'recyclerview'
    }
    implementation libs.constraintlayout
    implementation project(path: ':wllib')
    implementation project(path: ':MPChartLib')
    implementation project(path: ':weiqianwllib')


    //navigation
    implementation libs.navigation.fragment.ktx
    implementation libs.navigation.ui.ktx

    //paging3
    implementation(libs.paging.runtime) {
        exclude group: 'androidx.recyclerview', module: 'recyclerview'
    }
    // alternatively - without Android dependencies for tests
    testImplementation libs.paging.common
    implementation libs.swiperefreshlayout

    //room
    implementation libs.room.runtime
    annotationProcessor libs.room.compiler
    kapt libs.room.compiler
    implementation libs.room.paging
    implementation libs.room.ktx

    //hilt
    implementation libs.hilt.android
    kapt libs.hilt.android.compiler
    kapt libs.androidx.hilt.compiler

    implementation libs.lifecycle.livedata.ktx
    implementation libs.lifecycle.viewmodel.ktx
    implementation libs.lifecycle.runtime.ktx
    //logger
//    implementation 'com.jakewharton.timber:timber:4.5.1'
    //操作u盘
    implementation libs.libaums.core
    //serial port usb转串
//    implementation 'com.github.mik3y:usb-serial-for-android:3.4.6'
    //eventbus
    implementation(libs.eventbus)
    implementation libs.usbserial

    //documentfile 官方文件管理的新类
    implementation libs.documentfile
    //mmkv键值对
//    implementation 'com.tencent:mmkv:1.2.16'

//    implementation("io.github.cymchad:BaseRecyclerViewAdapterHelper:4.0.0-beta06") {
//        exclude group: 'androidx.recyclerview', module: 'recyclerview'
//    }
    //old 1.3.0
    implementation libs.recyclerview
    //datastore
    implementation libs.datastore.preferences
    //时间选择器
//    implementation ("com.jzxiang.pickerview:TimePickerDialog:1.0.1") {
//        exclude group: 'com.android.support', module: 'support-v4'
//    }
    implementation libs.materialdatetimepicker
    implementation libs.androidpicker.wheelpicker
    implementation libs.androidpicker.common
    implementation libs.androidpicker.wheelview
    implementation libs.powerspinner
    //dialog
    implementation(libs.xpopup) {
        exclude group: "com.davemorrissey.labs", module: "subsampling-scale-image-view-androidx"
    }
    //json解析
    implementation libs.gson

    //itext7 生成pdf
    implementation libs.itext.core
    implementation libs.itext.bc.adapter

    //printhand
    implementation libs.intentapi
    implementation libs.printingsdk
    //内存泄露检测
    debugImplementation libs.leakcanary.android
    implementation libs.fondesa.recycler.divider
}
